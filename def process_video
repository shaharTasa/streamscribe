    def process_video(self, file_path: Path) -> ProcessedVideo:
        try:
            # Process audio and get transcription
            audio_path = self.video_processor.process_file(file_path)
            transcription = self.video_processor.transcribe(audio_path)

            # Get transcription segments with timestamps
            segments = transcription.get('segments', [])

            # Process segments for topic analysis if needed
            processed_segments = []
            for seg in segments:
                processed_segments.append({
                    'start_time': seg['start'],
                    'end_time': seg['end'],
                    'text': seg['text'],
                })

            # Generate overall summary
            overall_summary = self.summarizer.summarize_entire_transcription(
                transcription['text'],
                max_summary_length=150
            )

            # Use the summary for topic analysis to avoid token limits
            topics = self.qa_processor.analyze_topics(overall_summary)

            return ProcessedVideo(
                full_text=transcription['text'],
                overall_summary=overall_summary,
                segments=processed_segments,  # Update if you have segment processing
                topics=topics
            )

        except Exception as e:
            logger.error(f"Video processing failed: {e}")
            raise
